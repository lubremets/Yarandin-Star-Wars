{"ast":null,"code":"import _toConsumableArray from\"/Users/liubomyravramets/Desktop/test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/liubomyravramets/Desktop/test/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/liubomyravramets/Desktop/test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/liubomyravramets/Desktop/test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Route,NavLink}from'react-router-dom';import'./App.css';import _ from'lodash';import FilmsList from'./components/FilmsList';var FilmUrl='https://swapi.co/api/films/';var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),listOfFilms=_useState2[0],setListOfFilms=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),title=_useState4[0],setTitle=_useState4[1];// const match = useRouteMatch();\nvar getFilmFromServer=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(FilmUrl));case 2:response=_context.sent;return _context.abrupt(\"return\",response.json());case 4:case\"end\":return _context.stop();}}},_callee);}));return function getFilmFromServer(){return _ref.apply(this,arguments);};}();var setQueryWithDebounce=_.debounce(function(query){setTitle(query);},1000);var loadFilms=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.t0=setListOfFilms;_context2.next=3;return getFilmFromServer();case 3:_context2.t1=_context2.sent.results;return _context2.abrupt(\"return\",(0,_context2.t0)(_context2.t1));case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function loadFilms(){return _ref2.apply(this,arguments);};}();var sortByName=function sortByName(){return setListOfFilms(function(prevState){return _toConsumableArray(prevState).sort(function(a,b){return a.title.localeCompare(b.title);});});};var sortByEpisod=function sortByEpisod(){return setListOfFilms(function(prevState){return _toConsumableArray(prevState).sort(function(a,b){return b.episode_id-a.episode_id;});});};var findPost=function findPost(){return listOfFilms.filter(function(item){return item.title.includes(title);});};return React.createElement(\"div\",{className:\"App\",align:\"center\"},React.createElement(\"div\",{className:\"image\"}),React.createElement(\"h1\",{className:\"App__header\"},\"Star Wars Films\"),React.createElement(NavLink,{to:\"/films\",onClick:loadFilms},\"Show films\"),listOfFilms.length!==0&&React.createElement(React.Fragment,null,React.createElement(\"input\",{placeholder:\"Search...\",onChange:function onChange(event){return setQueryWithDebounce(event.target.value);}}),React.createElement(\"button\",{type:\"button\",onClick:sortByName},\"sortByName\"),React.createElement(\"button\",{type:\"button\",onClick:sortByEpisod},\"sortByEpisod\"),React.createElement(Route,{path:\"/films/:id?\"},React.createElement(FilmsList,{listOfFilms:findPost()}))));};export default App;","map":{"version":3,"sources":["/Users/liubomyravramets/Desktop/test/src/App.js"],"names":["React","useState","Route","NavLink","_","FilmsList","FilmUrl","App","listOfFilms","setListOfFilms","title","setTitle","getFilmFromServer","fetch","response","json","setQueryWithDebounce","debounce","query","loadFilms","results","sortByName","prevState","sort","a","b","localeCompare","sortByEpisod","episode_id","findPost","filter","item","includes","length","event","target","value"],"mappings":"ieAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,KAAT,CAAgBC,OAAhB,KAA+B,kBAA/B,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CAEA,GAAMC,CAAAA,OAAO,CAAG,6BAAhB,CAEA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,eACsBN,QAAQ,CAAC,EAAD,CAD9B,wCACTO,WADS,eACIC,cADJ,8BAEUR,QAAQ,CAAC,EAAD,CAFlB,yCAETS,KAFS,eAEFC,QAFE,eAGhB;AAEA,GAAMC,CAAAA,iBAAiB,0FAAG,sKACDC,CAAAA,KAAK,WAAIP,OAAJ,EADJ,QAClBQ,QADkB,+CAGjBA,QAAQ,CAACC,IAAT,EAHiB,wDAAH,kBAAjBH,CAAAA,iBAAiB,0CAAvB,CAMA,GAAMI,CAAAA,oBAAoB,CAAGZ,CAAC,CAACa,QAAF,CAAW,SAACC,KAAD,CAAW,CACjDP,QAAQ,CAACO,KAAD,CAAR,CACD,CAF4B,CAE1B,IAF0B,CAA7B,CAIA,GAAMC,CAAAA,SAAS,2FAAG,qJAChBV,cADgB,wBACMG,CAAAA,iBAAiB,EADvB,oCAC2BQ,OAD3B,0HAAH,kBAATD,CAAAA,SAAS,2CAAf,CAIA,GAAME,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,SAAMZ,CAAAA,cAAc,CAAC,SAAAa,SAAS,QAC/C,oBAAIA,SAAJ,EAAeC,IAAf,CAAoB,SAACC,CAAD,CAAIC,CAAJ,QAAUD,CAAAA,CAAC,CAACd,KAAF,CAAQgB,aAAR,CAAsBD,CAAC,CAACf,KAAxB,CAAV,EAApB,CAD+C,EAAV,CAApB,EAAnB,CAGA,GAAMiB,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,SAAMlB,CAAAA,cAAc,CAAC,SAAAa,SAAS,QACjD,oBAAIA,SAAJ,EAAeC,IAAf,CAAoB,SAACC,CAAD,CAAIC,CAAJ,QAAUA,CAAAA,CAAC,CAACG,UAAF,CAAeJ,CAAC,CAACI,UAA3B,EAApB,CADiD,EAAV,CAApB,EAArB,CAGA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,SAAMrB,CAAAA,WAAW,CAACsB,MAAZ,CAAmB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACrB,KAAL,CAAWsB,QAAX,CAAoBtB,KAApB,CAAJ,EAAvB,CAAN,EAAjB,CAEA,MACE,4BAAK,SAAS,CAAC,KAAf,CAAqB,KAAK,CAAC,QAA3B,EACE,2BAAK,SAAS,CAAC,OAAf,EADF,CAEE,0BAAI,SAAS,CAAC,aAAd,oBAFF,CAGE,oBAAC,OAAD,EAAS,EAAE,CAAC,QAAZ,CAAqB,OAAO,CAAES,SAA9B,eAHF,CAMGX,WAAW,CAACyB,MAAZ,GAAuB,CAAvB,EAEG,wCACE,6BACE,WAAW,CAAC,WADd,CAEE,QAAQ,CAAE,kBAAAC,KAAK,QAAIlB,CAAAA,oBAAoB,CAACkB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAxB,EAFjB,EADF,CAKE,8BAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAEf,UAA/B,eALF,CAME,8BAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAEM,YAA/B,iBANF,CAQE,oBAAC,KAAD,EAAO,IAAI,CAAC,aAAZ,EACE,oBAAC,SAAD,EAAW,WAAW,CAAEE,QAAQ,EAAhC,EADF,CARF,CARN,CADF,CA0BD,CArDD,CAuDA,cAAetB,CAAAA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Route, NavLink } from 'react-router-dom';\nimport './App.css';\nimport _ from 'lodash';\nimport FilmsList from './components/FilmsList';\n\nconst FilmUrl = 'https://swapi.co/api/films/';\n\nconst App = () => {\n  const [listOfFilms, setListOfFilms] = useState([]);\n  const [title, setTitle] = useState('');\n  // const match = useRouteMatch();\n\n  const getFilmFromServer = async() => {\n    const response = await fetch(`${FilmUrl}`);\n\n    return response.json();\n  };\n\n  const setQueryWithDebounce = _.debounce((query) => {\n    setTitle(query);\n  }, 1000);\n\n  const loadFilms = async() => (\n    setListOfFilms((await getFilmFromServer()).results)\n  );\n\n  const sortByName = () => setListOfFilms(prevState => (\n    [...prevState].sort((a, b) => a.title.localeCompare(b.title))));\n\n  const sortByEpisod = () => setListOfFilms(prevState => (\n    [...prevState].sort((a, b) => b.episode_id - a.episode_id)));\n\n  const findPost = () => listOfFilms.filter(item => item.title.includes(title));\n\n  return (\n    <div className=\"App\" align=\"center\">\n      <div className=\"image\" />\n      <h1 className=\"App__header\">Star Wars Films</h1>\n      <NavLink to=\"/films\" onClick={loadFilms}>\n        Show films\n      </NavLink>\n      {listOfFilms.length !== 0\n        && (\n          <>\n            <input\n              placeholder=\"Search...\"\n              onChange={event => setQueryWithDebounce(event.target.value)}\n            />\n            <button type=\"button\" onClick={sortByName}>sortByName</button>\n            <button type=\"button\" onClick={sortByEpisod}>sortByEpisod</button>\n\n            <Route path=\"/films/:id?\">\n              <FilmsList listOfFilms={findPost()} />\n            </Route>\n            {/* {console.log(match.params.id)} */}\n          </>\n        )\n      }\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}