{"version":3,"sources":["components/Film.js","components/ShowInfo.js","components/FilmsList.js","App.js","index.js"],"names":["Film","film","history","useHistory","className","type","style","cursor","onClick","push","pathname","episode_id","title","ShowInfo","color","fontSize","opening_crawl","director","producer","release_date","FilmsList","listOfFilms","match","useRouteMatch","undefined","params","id","find","item","map","key","App","useState","setListOfFilms","setTitle","getFilmFromServer","a","fetch","response","json","setQueryWithDebounce","_","debounce","query","loadFilms","results","align","to","length","placeholder","onChange","event","target","value","prevState","sort","b","localeCompare","path","filter","includes","ReactDOM","render","document","getElementById"],"mappings":"qUAKe,SAASA,EAAT,GAAyB,IAATC,EAAQ,EAARA,KACvBC,EAAUC,cAEhB,OACE,4BACEC,UAAU,OACVC,KAAK,SACLC,MAAO,CAAEC,OAAQ,WACjBC,QAAS,WACPN,EAAQO,KAAK,CACXC,SAAS,UAAD,OAAYT,EAAKU,gBAI5BV,EAAKW,OCfG,SAASC,EAAT,GAA6B,IAATZ,EAAQ,EAARA,KACjC,OACE,4BACE,wBAAIK,MAAO,CACTQ,MAAO,MAAOC,SAAU,SAGvBd,EAAKW,OAER,wBAAIN,MAAO,CAAEQ,MAAO,QAAUb,EAAKe,eACnC,wBAAIV,MAAO,CAAEQ,MAAO,QAClB,0BAAMR,MAAO,CAAEQ,MAAO,WAAtB,cACCb,EAAKgB,UAER,wBAAIX,MAAO,CAAEQ,MAAO,QAClB,0BAAMR,MAAO,CAAEQ,MAAO,WAAtB,cACCb,EAAKiB,UAER,wBAAIZ,MAAO,CAAEQ,MAAO,QAClB,0BAAMR,MAAO,CAAEQ,MAAO,WAAtB,kBACCb,EAAKkB,eCICC,MArBf,YAAqC,IAAhBC,EAAe,EAAfA,YACbC,EAAQC,cAEd,YACsBC,IAApBF,EAAMG,OAAOC,GAET,kBAACb,EAAD,CAAUZ,KAAMoB,EAAYM,MAAK,SAAAC,GAAI,OAAIA,EAAKjB,cAAgBW,EAAMG,OAAOC,QAE3E,4BAEIL,EAAYQ,KAAI,SAAA5B,GAAI,OAAI,kBAACD,EAAD,CAAMC,KAAMA,EAAM6B,IAAK7B,EAAKU,kBC8CjDoB,EAvDH,WAAO,IAAD,EACsBC,mBAAS,IAD/B,mBACTX,EADS,KACIY,EADJ,OAEUD,mBAAS,IAFnB,mBAETpB,EAFS,KAEFsB,EAFE,KAKVC,EAAiB,uCAAG,4BAAAC,EAAA,sEACDC,MAAM,GAAD,OARhB,gCAOY,cAClBC,EADkB,yBAGjBA,EAASC,QAHQ,2CAAH,qDAMjBC,EAAuBC,IAAEC,UAAS,SAACC,GACvCT,EAASS,KACR,KAEGC,EAAS,uCAAG,sBAAAR,EAAA,kEAChBH,EADgB,SACME,IADN,0BAC2BU,QAD3B,6EAAH,qDAYf,OACE,yBAAKzC,UAAU,MAAM0C,MAAM,UACzB,yBAAK1C,UAAU,UACf,wBAAIA,UAAU,eAAd,mBACA,kBAAC,IAAD,CAAS2C,GAAG,SAASvC,QAASoC,GAA9B,cAGwB,IAAvBvB,EAAY2B,QAET,oCACE,2BACEC,YAAY,YACZC,SAAU,SAAAC,GAAK,OAAIX,EAAqBW,EAAMC,OAAOC,UAEvD,4BAAQhD,KAAK,SAASG,QAtBb,kBAAMyB,GAAe,SAAAqB,GAAS,OAC/C,YAAIA,GAAWC,MAAK,SAACnB,EAAGoB,GAAJ,OAAUpB,EAAExB,MAAM6C,cAAcD,EAAE5C,eAqB9C,cACA,4BAAQP,KAAK,SAASG,QApBX,kBAAMyB,GAAe,SAAAqB,GAAS,OACjD,YAAIA,GAAWC,MAAK,SAACnB,EAAGoB,GAAJ,OAAUA,EAAE7C,WAAayB,EAAEzB,mBAmBvC,gBAEA,kBAAC,IAAD,CAAO+C,KAAK,eACV,kBAAC,EAAD,CAAWrC,YApBAA,EAAYsC,QAAO,SAAA/B,GAAI,OAAIA,EAAKhB,MAAMgD,SAAShD,YC5BxEiD,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.b511851e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\n// import ShowInfo from './ShowInfo';\n\nexport default function Film({ film }) {\n  const history = useHistory();\n\n  return (\n    <button\n      className=\"film\"\n      type=\"button\"\n      style={{ cursor: 'pointer' }}\n      onClick={() => {\n        history.push({\n          pathname: `/films/${film.episode_id}`,\n        });\n      }}\n    >\n      {film.title}\n    </button>\n  );\n}\n\nFilm.propTypes = {\n  film: PropTypes.shape({\n    title: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n// import { useHistory } from 'react-router-dom';\n\nexport default function ShowInfo({ film }) {\n  return (\n    <ul>\n      <li style={{\n        color: 'red', fontSize: '32px',\n      }}\n      >\n        {film.title}\n      </li>\n      <li style={{ color: 'red' }}>{film.opening_crawl}</li>\n      <li style={{ color: 'red' }}>\n        <span style={{ color: 'yellow' }}>Director: </span>\n        {film.director}\n      </li>\n      <li style={{ color: 'red' }}>\n        <span style={{ color: 'yellow' }}>Producer: </span>\n        {film.producer}\n      </li>\n      <li style={{ color: 'red' }}>\n        <span style={{ color: 'yellow' }}>Release Date: </span>\n        {film.release_date}\n      </li>\n    </ul>\n  );\n}\n\nShowInfo.propTypes = {\n  film: PropTypes.shape({\n    title: PropTypes.string,\n    opening_crawl: PropTypes.string,\n    director: PropTypes.string,\n    producer: PropTypes.string,\n    release_date: PropTypes.string,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useRouteMatch } from 'react-router-dom';\nimport Film from './Film';\n\nimport ShowInfo from './ShowInfo';\n\nfunction FilmsList({ listOfFilms }) {\n  const match = useRouteMatch();\n\n  return (\n    match.params.id !== undefined\n      // eslint-disable-next-line max-len\n      ? <ShowInfo film={listOfFilms.find(item => item.episode_id === +match.params.id)} />\n      : (\n        <ul>\n          {\n            listOfFilms.map(film => <Film film={film} key={film.episode_id} />)\n          }\n        </ul>\n      )\n  );\n}\n\nFilmsList.propTypes = {\n  listOfFilms: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default FilmsList;\n","import React, { useState } from 'react';\nimport { Route, NavLink } from 'react-router-dom';\nimport './App.css';\nimport _ from 'lodash';\nimport FilmsList from './components/FilmsList';\n\nconst FilmUrl = 'https://swapi.co/api/films/';\n\nconst App = () => {\n  const [listOfFilms, setListOfFilms] = useState([]);\n  const [title, setTitle] = useState('');\n  // const match = useRouteMatch();\n\n  const getFilmFromServer = async() => {\n    const response = await fetch(`${FilmUrl}`);\n\n    return response.json();\n  };\n\n  const setQueryWithDebounce = _.debounce((query) => {\n    setTitle(query);\n  }, 1000);\n\n  const loadFilms = async() => (\n    setListOfFilms((await getFilmFromServer()).results)\n  );\n\n  const sortByName = () => setListOfFilms(prevState => (\n    [...prevState].sort((a, b) => a.title.localeCompare(b.title))));\n\n  const sortByEpisod = () => setListOfFilms(prevState => (\n    [...prevState].sort((a, b) => b.episode_id - a.episode_id)));\n\n  const findPost = () => listOfFilms.filter(item => item.title.includes(title));\n\n  return (\n    <div className=\"App\" align=\"center\">\n      <div className=\"image\" />\n      <h1 className=\"App__header\">Star Wars Films</h1>\n      <NavLink to=\"/films\" onClick={loadFilms}>\n        Show films\n      </NavLink>\n      {listOfFilms.length !== 0\n        && (\n          <>\n            <input\n              placeholder=\"Search...\"\n              onChange={event => setQueryWithDebounce(event.target.value)}\n            />\n            <button type=\"button\" onClick={sortByName}>sortByName</button>\n            <button type=\"button\" onClick={sortByEpisod}>sortByEpisod</button>\n\n            <Route path=\"/films/:id?\">\n              <FilmsList listOfFilms={findPost()} />\n            </Route>\n            {/* {console.log(match.params.id)} */}\n          </>\n        )\n      }\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}